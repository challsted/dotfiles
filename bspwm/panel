#! /bin/sh

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &
clock -sf 'S%a %H:%M' > "$PANEL_FIFO" &

LIGHTGREY="%{F#FFC5C8C6}"
LIGHTRED="%{F#FFCC6666}"
LIGHTBLUE="%{F#FF2FD496}"

panel_volume()
{

    volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 3 | sed 's/].*//g')
    volLevel=$(amixer get Master | tail -n 1 | cut -d '[' -f 2 | sed 's/\%].*//g')
    case $volLevel in
        100)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027' $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        [0-9])
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027' $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        1*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027' $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        2*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027' $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        3*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        4*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf027'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        5*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf028'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        6*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf028'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        7*)
            if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf028'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        8*) if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf028'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        9*) if [ "$volStatus" == "on" ]; then
                echo -e $LIGHTBLUE'\uf028'  $LIGHTGREY$volLevel
            else
                echo -e $LIGHTBLUE'\uf026' $LIGHTRED$volLevel
            fi
        ;;
        esac
    }

    music()
    {
        if [[ $(mpc | head -1) ]]; then
            echo -e $LIGHTBLUE'\uf001'$LIGHTGREY $(mpc | head -1)
        else
            echo ""
        fi
    }

    #clock
    while true; do
        #S vir time output in panel
        echo -e 'S' $(music)'     '$(panel_volume)'     '$LIGHTBLUE'\uf073'$LIGHTGREY $(date +'%a %d %b %p')'     '$LIGHTBLUE'\uf017'$LIGHTGREY $(date +'%H:%M %p')
    done > "$PANEL_FIFO" &

. panel_colors

panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT -f "$PANEL_FONT" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
    sleep 0.05
    wid=$(xdo id -a "$PANEL_WM_NAME")
    tries_left=$((tries_left - 1))
done
[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
